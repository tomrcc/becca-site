---
import Markdown from "../utility/markdown.astro";

interface Props {
  background_color: string;
  tab_heading_inactive_color: string;
  tab_text_color: string;
  heading: {
    heading_text: string;
    text_color: string;
  };
  tabs: [
    {
      tab_heading: string;
      text_content: string;
    },
  ];
}

const { background_color, tabs } = Astro.props;
---

<div class="tabbed-text" style={`background-color: ${background_color};`}>
  <div x-data="{ selectedTab: 0 }" class="tab_wrapper">
    <!-- The tabs navigation -->
    <nav>
      {
        tabs.map((tab, index) => {
          return (
            <button
              x-on:click={`selectedTab = ${index + 1}`}
              class="color-button">
              {tab.tab_heading}
            </button>
          );
        })
      }
    </nav>

    <div class="">
      {
        tabs.map((tab, index) => {
          return (
            <div
              class="tab-content"
              x-bind:class={`selectedTab == ${index + 1} ? 'show' : 'hide'`}>
              <button x-on:click={`selectedTab = 0`}>Close</button>
              <p>{tab.text_content}</p>
            </div>
          );
        })
      }
    </div>
  </div>
</div>

<style is:global>
  .tab_wrapper {
    position: relative;
    padding-inline: 48px;
    overflow-x: hidden;
    overflow-y: hidden;
    height: 100vh;
  }
  .tab-content {
    background-color: white;
    top: 0;
    position: absolute;
    width: 90vw;
  }
  .hide {
    left: 100vw;
    z-index: 0;
    transition-property: opacity left;
    transition-duration: 2s;
  }
  .show {
    z-index: 99;
    transition-property: left;
    transition-duration: 2s;
    left: 0vw;
    opacity: 1;
  }
</style>
