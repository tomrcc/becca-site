---
import Icon from "../utility/icon";
import Markdown from "../utility/markdown.astro";

interface Props {
  background_color: string;
  heading: {
    heading_text: string;
    text_color: string;
  };
  tab_headings: {
    tab_headings_text_color: string;
    tab_subheadings_text_content: string;
    tab_subheadings_text_color: string;
  };
  tabs: [
    {
      tab_heading: string;
      text_content: string;
      text_color: string;
      background_color: string;
    },
  ];
}

const { background_color, heading, tab_headings, tabs } = Astro.props;
---

<section class="tabbed-text" style={`background-color: ${background_color};`}>
  <div
    x-data="{ selectedTab: 0, closingTab: '' }"
    class="mobile-tab-wrapper"
    @click.outside="closingTab = selectedTab, selectedTab = 0">
    <!-- The tabs navigation -->
    <nav>
      <h2 style={`color: ${heading.text_color};`}>{heading.heading_text}</h2>
      <ul>
        {
          tabs?.map((tab, index) => {
            return (
              <li>
                <button x-on:click={`selectedTab = ${index + 1}`}>
                  <h3
                    class="mobile-tab-heading"
                    style={`color: ${tab_headings.tab_headings_text_color};`}>
                    {tab.tab_heading}
                  </h3>
                  <p
                    style={`color: ${tab_headings.tab_subheadings_text_color};`}>
                    {tab_headings.tab_subheadings_text_content}
                    <span>
                      <Icon icon={"Plus"} />
                    </span>
                  </p>
                </button>
              </li>
            );
          })
        }
      </ul>
    </nav>
    <!-- The tabs -->
    <ul class="mobile-tabs-list">
      {
        tabs?.map((tab, index) => {
          return (
            <li
              class="mobile-tab-content"
              style={`background-color: ${tab.background_color};`}
              x-bind:class={`[(closingTab == '${index + 1}' ? 'closeTab' : ''), (selectedTab === ${index + 1} ? 'showTab' : 'hideTab')]`}>
              <button
                class="close-button"
                x-on:click={`selectedTab = 0, closingTab = '${index + 1}'`}>
                <Icon icon={"Close"} />
              </button>
              <div style={`color: ${tab.text_color};`}>
                <h3 class="mobile-tab-content-heading">{tab.tab_heading}</h3>
                <Markdown content={tab.text_content} />
              </div>
            </li>
          );
        })
      }
    </ul>
  </div>

  <!-- Desktop -->
  <div x-data="{ selectedTab: 1 }" class="tab-wrapper">
    <!-- The tabs navigation -->
    <nav>
      <h2 style={`color: ${heading.text_color};`}>{heading.heading_text}</h2>
      <ul>
        {
          tabs?.map((tab, index) => {
            return (
              <li>
                <button x-on:click={`selectedTab = ${index + 1}`}>
                  <h3
                    class="tab-heading"
                    style={`color: ${tab_headings.tab_headings_text_color};`}>
                    {tab.tab_heading}
                  </h3>
                </button>
              </li>
            );
          })
        }
      </ul>
    </nav>
    <!-- The tabs -->
    <ul class="tabs-list">
      {
        tabs?.map((tab, index) => {
          return (
            <li
              class="tab-content"
              style={`background-color: ${tab.background_color};`}
              x-bind:class={`selectedTab === ${index + 1} ? 'showTab' : 'hideTab'`}>
              <div style={`color: ${tab.text_color};`}>
                <Markdown content={tab.text_content} />
              </div>
            </li>
          );
        })
      }
    </ul>
  </div>
</section>

<style>
  section {
    position: relative;
  }

  .tab-wrapper {
    display: none;
  }
  .tab-content {
    display: none;
  }
  .mobile-tab-wrapper {
    max-width: var(--pageContainer);
    margin: 0 auto;
    overflow-x: hidden;
    min-height: 80vh;
    padding-block: 48px;
    display: flex;
    flex-direction: column;
    gap: 40px;
  }
  .mobile-tab-wrapper nav h2 {
    padding-inline: var(--pagePadding);
    padding-block: 30px;
    font-size: 1.5rem;
  }
  .mobile-tab-wrapper nav ul {
    padding-inline: var(--pagePadding);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: 2rem;
  }
  .mobile-tab-content {
    position: absolute;
    top: 0;
    width: 100vw;
    height: fit-content;
    min-height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-inline: var(--pagePadding);
    padding-block: 30px;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;
  }
  .mobile-tab-heading {
    font-weight: 500;
    font-size: 1.25rem;
    line-height: 140%;
  }
  .mobile-tab-content-heading {
    font-weight: 500;
    font-size: 1.25rem;
    line-height: 140%;
    margin-bottom: 32px;
  }
  .mobile-tab-wrapper nav button p {
    text-align: left;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  .mobile-tab-wrapper nav button p span {
    width: 0.5rem;
  }
  .mobile-tab-content .close-button {
    width: 1rem;
    align-self: flex-end;
    margin-bottom: 2rem;
  }
  .hideTab {
    display: none;
    z-index: 0;
    left: 100vw;
  }
  .closeTab {
    animation: slideOutRight 800ms;
  }
  .showTab {
    display: flex;
    z-index: 99;
    animation: slideInLeft 1000ms;
  }
  @keyframes slideInLeft {
    0% {
      display: flex;
      left: 100vw;
    }
    100% {
      left: 0vw;
    }
  }
  @keyframes slideOutRight {
    0% {
      display: flex;
      left: 0vw;
    }
    100% {
      display: none;
      left: 100vw;
    }
  }
  @keyframes slideInLeft {
    0% {
      display: flex;
      left: 100vw;
    }
    100% {
      left: 0vw;
    }
  }
  @keyframes slideOutRight {
    0% {
      display: flex;
      left: 0vw;
    }
    100% {
      display: none;
      left: 100vw;
    }
  }

  /* Desktop styles */
  @media screen and (min-width: 768px) {
    .tab-wrapper {
      display: flex;
      justify-content: space-between;
    }
    .tab-content {
      display: flex;
    }
    .mobile-tab-wrapper {
      display: none;
    }
    .mobile-tab-content {
      display: none;
    }

    .tab-wrapper {
      max-width: var(--pageContainer);
      margin: 0 auto;
      padding-block: 200px;
      display: flex;
      gap: 0px;
    }
    .tab-wrapper nav h2 {
      padding-inline: var(--pagePadding);
      padding-block: 30px;
      font-size: 1.5rem;
    }
    .tab-wrapper nav ul {
      padding-inline: var(--pagePadding);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      min-width: max-content;
      gap: 32px;
    }

    .tabs-list {
      display: flex;
      justify-content: flex-end;
    }
    .tab-content {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding-inline: var(--pagePadding);
      padding-block: 30px;
      max-width: 820px;
    }
    .tab-heading {
      font-weight: 500;
      font-size: 1.25rem;
      line-height: 140%;
      margin-bottom: 32px;
    }
    .tab-wrapper nav button p {
      text-align: left;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .tab-wrapper nav button p span {
      width: 0.5rem;
    }
    .hideTab {
      display: none;
      z-index: 0;
      left: 0;
    }
    .closeTab {
      animation: none;
    }
    .showTab {
      animation: none;
    }
  }
  @media screen and (min-width: 1024px) {
    .tab-heading {
      font-weight: 500;
      font-size: 2rem;
      line-height: 140%;
      margin-bottom: 32px;
    }
    .tab-wrapper {
      gap: 40px;
    }
  }
</style>
