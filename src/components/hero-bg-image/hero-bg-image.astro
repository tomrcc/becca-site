---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
	heading: {
		heading_text: string;
		text_color: string;
	};
	background_image: {
		image_path: string;
		alt_text: string;
	};
	background_filters: {
		brightness: number;
		blur: number;
		background_gradient: {
			gradient_enabled: boolean;
			gradient_direction: string;
			gradient_color: string;
      gradient_transparency: number;
		};
	};
}

const { heading, background_image, background_filters } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/**/*.{jpeg,jpg,png,gif}",
	{ eager: true },
);
const imageSrc =
	images[background_image.image_path]?.default ?? background_image.image_path;

const opacityDecimal = 1 - (1 / (100 / background_filters.background_gradient.gradient_transparency));
---

<section class="hero">
  <div class="hero-container">
    <h1 style={`color: ${heading.text_color};`}>
      {heading.heading_text}
    </h1>
    {
      imageSrc ? (
        <div
          class="hero-bg-image-filter-grad"
          style={background_filters.background_gradient.gradient_enabled ? 
            `opacity: ${opacityDecimal}; background-color: ${background_filters.background_gradient.gradient_color}; mask-image: linear-background_gradient(to ${background_filters.background_gradient.gradient_direction},  transparent 33%,  ${background_filters.background_gradient.gradient_color} 66%);`
            : ''}>    
        </div>
        <div
          class="hero-bg-image-filter"
          style={`backdrop-filter: brightness(${background_filters.brightness}%) blur(${background_filters.blur}px);`}>    
        </div>
        <Image
          class="hero-bg-image"
          alt={background_image.alt_text}
          src={imageSrc}
        />
      ) : (
        ""
      )
    }
  </div>
</section>

<style>
  .hero {
    position: relative;
  }
  .hero-container {
    max-width: var(--pageContainer);
    height: calc(80vh - var(--headerCalcHeight));
    max-height: calc(720px - var(--headerCalcHeight));
    margin-inline: auto;
    padding-inline: var(--pagePadding);
    padding-block: 40px;
    display: flex;
  }
  .hero-bg-image,
  .hero-bg-image-filter,
  .hero-bg-image-filter-grad {
    position: absolute;
    left: 0;
    top: calc(var(--headerCalcHeight) * -1);
    width: 100%;
    height: 80vh;
    max-height: 720px;
    object-fit: cover;
  }

  .hero-bg-image-filter {
    z-index: 1;
  }
  .hero-bg-image-filter-grad {
    z-index: 2;
  }

  .hero-container h1 {
    position: relative;
    z-index: 99;
    font-size: 1rem;
    align-self: flex-end;
    text-wrap: balance;
  }

  @media screen and (min-width: 512px) {
    .hero-container {
      padding-block: 75px;
    }
    .hero-container h1 {
      font-size: 2.5rem;
    }
  }
</style>
