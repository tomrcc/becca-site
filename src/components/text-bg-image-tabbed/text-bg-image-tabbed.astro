---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Markdown from "../utility/markdown.astro";

interface Props {
  tab_styles: {
    heading_background_color: string;
    heading_text_color: string;
    heading_active_background_color: string;
    heading_active_text_color: string;
    text_background_color: string;
    text_color: string;
  };
  tabs: [
    {
      text: {
        text_heading: string;
        text_content: string;
        text_color: string;
      };
      background_image: {
        image_path: string;
        alt_text: string;
      };
    },
  ];
}

const { tabs, tab_styles } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif}",
  { eager: true }
);
const headingBackgroundColor = tab_styles.heading_background_color;
const headingTextColor = tab_styles.heading_text_color;
const headingActiveBackgroundColor = tab_styles.heading_active_background_color;
const headingActiveTextColor = tab_styles.heading_active_text_color;
const textBackgroundColor = tab_styles.text_background_color;
const textColor = tab_styles.text_color;
---

<div class="text-bg-image-tabbed">
  <spicy-sections class="spicy-sections">
    {
      tabs?.map((tab) => {
        const imageSrc =
          images[tab.background_image.image_path]?.default ??
          tab.background_image.image_path;
        return (
          <>
            <h3 class="text-bg-image-tabbed-tab-heading">
              {tab.text.text_heading}
            </h3>
            <div class="text-bg-image-tabbed-content">
              <Image
                alt={tab.background_image.alt_text}
                widths={[320, 500, 640]}
                sizes={`(max-width: 640px) 320px, (max-width: 960px) 500px, (max-width: 1280px) 640px`}
                src={imageSrc}
              />
              <Markdown content={tab.text.text_content} />
            </div>
          </>
        );
      })
    }
  </spicy-sections>
</div>

<style
  define:vars={{
    headingBackgroundColor,
    headingTextColor,
    headingActiveBackgroundColor,
    headingActiveTextColor,
    textBackgroundColor,
    textColor,
  }}
>
  .text-bg-image-tabbed {
    /* min-height: 80vh; */
  }
  .text-bg-image-tabbed-tab-heading {
  }

  .text-bg-image-tabbed-content {
    align-self: flex-end;
  }

  spicy-sections {
    --const-mq-affordances: [screen and (min-width: 0px)] tab-bar;
    width: 100% !important;
    min-height: 80vh;
    display: flex;
    position: relative;
    flex-direction: column;
    justify-content: space-between;
    padding-block: 48px;
    margin-bottom: -1rem;
  }
  spicy-sections img {
    position: absolute;
    height: 100%;
    top: -1rem;
  }
  spicy-sections h3 {
    font-size: 1.25;
    overflow: wrap;
    position: relative;
    z-index: 9;
    background-color: var(--headingBackgroundColor);
    color: var(--headingTextColor) !important;
    padding: 20px;
  }
  spicy-sections::part(tab-bar) {
    width: 100%;
    max-width: var(--pageContainer);
    margin: 0 auto;
  }
  spicy-sections::part(tab-list) {
    display: flex;
    padding-inline: var(--pagePadding);
    gap: 48px;
  }
  spicy-sections h3[aria-selected="true"] {
    background-color: var(--headingActiveBackgroundColor);
    color: var(--headingActiveTextColor) !important;
  }
</style>

<style is:global define:vars={{ textBackgroundColor, textColor }}>
  .text-bg-image-tabbed spicy-sections .markdown-text {
    max-width: var(--pageContainer) !important;
    margin: 0 auto;
    padding-inline: var(--pagePadding);
  }
  .text-bg-image-tabbed spicy-sections .markdown-text > * {
    position: relative !important;
    color: var(--textColor);
    background-color: var(--textBackgroundColor);
    max-width: 540px;
    margin-bottom: 0;
    padding-block: 16px;
    padding-inline: 37px;
  }
  .text-bg-image-tabbed spicy-sections .markdown-text > *:first-child {
    padding-top: 47px;
    margin-top: 96px;
  }
  .text-bg-image-tabbed spicy-sections .markdown-text > *:last-child {
    padding-bottom: 29px;
  }
</style>
